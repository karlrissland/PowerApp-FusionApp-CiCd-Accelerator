########################################################################
# This workflow will deploy all app components to a specific environment
########################################################################
name: Deploy To Environment

on:
  workflow_call:
    inputs:
      environment:
        description: 'environment to deploy solution to'
        required: true
        type: string

  workflow_dispatch:
    inputs:
      environment:
        description: 'environment to deploy solution to'
        required: true
        type: environment
        
permissions:
  id-token: write
  contents: read

#######################################################################
# Need to call deploy-powerapp-solution.yml for each solution so we   #
# pass in the settings for each solution.  Have not found a way to    #
# programatically select a variable for use.                           #
#######################################################################

jobs:
  deploy:
    environment: ${{ github.event.inputs.environment }}
    runs-on: windows-latest
      
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
    
      - name: Deploy ALMLab Solution
        uses: ./.github/workflows/deploy-powerapp-solution.yml
        with:
          environment: ${{ inputs.environment }}
          settingsfilecontents: ${{vars.ALMLAB_SETTINGSFILE}}
          solutionName: "ALMLab"
    

    
  #GITHUB-call-powerapp-solution-deployment: 
  #  uses: ./.github/workflows/deploy-powerapp-solution.yml
  #  with:
  #    environment: ${{ inputs.environment }}
  #    settingsfilecontents: ${{vars.XGITHUB_SETTINGSFILE}}
  #    solutionName: "GITHUB"
  #  secrets: inherit
    
  ################################################  
  # Use this template to call reusable workflows #
  # to deploy other parts of the app             #
  ################################################
  #SomeOtherComponent-Call-somethingelse-deployment
  #  uses: ./.github/workflows/component-deployment.yml
  #  with:
  #    environment: ${{ inputs.environment }}
  #    <other variables to pass>
  #  secrets: inherit
